UNIVERSIDAD TECNICA DEL NORTE
FICA/CITEL
NOMBRE: YUCAILLA VIVIANA

#include<EEPROM.h>
#include <Keypad.h>
#include <MsTimer2.h>
#include <LiquidCrystal.h>   // Librerias a utiizar

LiquidCrystal lcd(13, 12, 11, 10, 9, 8); //RS,E,D4,D5,D6,D7
// PINES DEL ARDUINO
char cambioC = '0';
int intentosE = 5, opcionE = 6, contra1E = 10, contra2E = 15, counter = 0, temporizador = 0, opcion = 0, intentos = 0, contraME = 20;
boolean ingreso = false, inicioMaster = false;
String contra1 = "ca900813";
String contra2 = "aj881112";
String contra3 = "ja890109";
String contra4 = "vy960930";
String contraM = ""; //// 
String master = "33333"; //almacenada en EEPROM
String lectura = "";
const byte ROWS = 4; //four rows
const byte COLS = 4; //three columns
const char keys[ROWS][COLS] = {
  {'7', '8', '9', 'A'},
  {'4', '5', '6', 'B'},
  {'1', '2', '3', 'C'},
  {'*', '0', '#', 'D'}
};

/*
{ 
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};


*/
byte rowPins[ROWS] = {A0, A1, A2, A3}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {7, 6, 5, 4}; //connect to the column pinouts of the keypad

// matrix corresponding the letters with each of the buttons of the keypad
const char letters[14] [4] = {
  {'0', '0', '0', '0'},
  {'a', 'b', 'c', '1'},
  {'d', 'e', 'f', '2'},
  {'g', 'h', 'i', '3'},
  {'j', 'k', 'l', '4'},
  {'m', 'n', 'o', '5'},
  {'p', 'q', 'r', '6'},
  {'s', 't', 'u', '7'},
  {'v', 'w', 'x', '8'},
  {'y', 'z', '9', '9'},
  {',', '.', '-', ':'},
  {'<', '?', '>', '!'},
  {'@', '+', '=', '#'},
  {'(', ')', '*', '/'}
};

Keypad customKeypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

long latter_time;
long difference;
bool endtext = false;

char last_key_pressed = ' ';
byte num_times_pressed = 0;

char last_character = ' ';

String text = "";

void setup() {
  Serial.begin(9600);
  customKeypad.addEventListener(keypadEvent); // Add an event listener for this keypad



  lcd.begin(16, 2);          //Configuracion inicial
 attachInterrupt(0, menu, LOW);
  MsTimer2::set(100, reloj);
  MsTimer2::start();
  for (int i = 0; i < 5; i++) {                //Declaramos el almacenamiento de contraseñas en EEPROM
    contraM = contraM + char(EEPROM.read(contraME + i)); delay(50);
  }
  for (int i = 0; i < 5; i++) {                //Declaramos el almacenamiento de contraseñas en EEPROM
    contra1 = contra1 + char(EEPROM.read(contra1E + i)); delay(50);
  }
  for (int j = 0; j < 5; j++) {
    contra2 = contra2 + char(EEPROM.read(contra2E + j)); delay(50);
  }
  opcion = EEPROM.read(opcionE);
  intentos = EEPROM.read(intentosE);

  
}

void loop() {
  char key = customKeypad.getKey();
  // if the key '#' has been pressed, it prints the text and sets it to ""
  if (endtext) {
    Serial.println("texto final");
    lcd.println(text); ////////////////NADA
    Serial.println(text);
    text = "";
    last_character = ' ';
    endtext = false;
  }
    if (intentos < 3) { //Condiciones de ingreso
    switch (opcion) {
      case 1:
        char contra = customKeypad.getKey();
        solicitudContrasena(contra);
        EEPROM.write(intentosE, intentos);
        break;
    }
    if (opcion == 2) {
      char contra2 = customKeypad.getKey();
      if (inicioMaster) {
        if (cambioC != '0') {
          cambioContra(contra2);
        } else {
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("1:CARLOS 2:ANDRES");
          lcd.setCursor(0, 1);
          lcd.print("3:JAVIER 4:VIVI");
          if (contra2 == '1' || contra2 == '2' || contra2 == '3' || contra2 == '4') {
            cambioC = contra2;
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("INGRESE CONTRA");
          }
        }
      } else {
       contraMaster(contra2);
      }
    }
  } 
  
  else { //Si un sensor se activa , reinicio del sistema
    char contra = customKeypad.getKey();
    contraMaster(contra);
    if (inicioMaster) {
      intentos = 0;
      opcion = 0;
      EEPROM.write(opcionE, 0);
      EEPROM.write(intentosE, 0);
      inicioMaster = false;
      intentos = 0;
      opcion = 0;
    }
  }
}

// Cuando se presiona una tecla, se debe traducir a la letra correcta.
void keypadEvent(KeypadEvent key) {
  switch (customKeypad.getState()) {
    case PRESSED:
      if (key == '#') {
        // key '#' establece el final del texto.
        if (last_character != ' ') {
          text += last_character;
        }
        endtext = true;
      } else {
        if (key == last_key_pressed) {
          /* Si se presiona la misma tecla varias veces, con un intervalo de menos de 3 segundos, se considera "buscar el siguiente carácter".
             Si el intervalo es de más de 3 segundos, se considera un carácter nuevo.
          */
          difference = millis() - latter_time;
          latter_time = millis();
          if (difference > 3000) {
            text += last_character;

            byte indice;
            /* Para las claves A, B, C y D, correspondientes posiciones 10 a 14 de la matriz de claves, la forma de calcular el índice es, al convertir a entero,
                restando el ASCII correspondiente a '7', que deja A como 10, B como 11, y así sucesivamente.
            */
            if (key > '9') {
              indice = key - '7';
            } else {
              indice = key - '0';
            }

            last_character = letters[indice][0];
            Serial.print("caracter: ");
            Serial.println(last_character);
            num_times_pressed = 4;  //1
          }
          else {
            byte indice;
            if (key > '9') {
              indice = key - '7';
            } else {
              indice = key - '0';
            }

            last_character = letters[indice][num_times_pressed % 4];
            Serial.print("caracter: ");
            Serial.println(last_character);
            num_times_pressed++;

          }
        }
        else {
          last_key_pressed = key;
          if (last_character != ' ') {
            text += last_character;
          }

          byte indice;
          if (key > '9') {
            indice = key - '7';
          } else {
            indice = key - '0';
          }

          last_character = letters[indice][0];
          Serial.print("caracter: ");
          Serial.println(last_character);
          num_times_pressed = 1;
          latter_time = millis();
        }
      }
      break;
  }
}


void menu() {
  if (intentos < 3) {
    opcion++;
    if (opcion > 2)
      opcion = 0;
    printLCD();
    EEPROM.write(opcionE, opcion);
    // put your main code here, to run repeatedly:
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("REINICIO");
    lcd.setCursor(0, 1);
    lcd.print("PW ADMIN:");
  }
  text = "";
  inicioMaster = false;
  ingreso = false;
  cambioC = '0';

}



void printLCD() { //menu de impresion de la LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  switch (opcion) {
    case 1:
      if (intentos < 3) {
        Serial.print("Ingresar la contraseña:");
        lcd.setCursor(0, 0);
        lcd.print("USUARIOS");
        lcd.setCursor(0, 1);
        lcd.print("CONTRA:");



        
      } else {
        lcd.setCursor(0, 0);
        lcd.print("INTENTOS=3");
        lcd.setCursor(0, 1);
        lcd.print("BLOQUEO");
      }
      break;
    case 2:
      lcd.print("CAMBIO CONTRA");
      lcd.setCursor(0, 1);
      lcd.print("CONTRA ADMIN:");
      break;
  }
}
void cambioContra(char contra) { //Metodo para el cambio de contraseña
  if (contra) {
    lcd.clear();
    lcd.setCursor(0, 1);
    lcd.print("N. CONTRA:");
    text += contra;
    lcd.print(lectura);
    if (text.length() == 5) {
      if (cambioC == '1') {
        for (int i = 0; i < 5; i++) {
          EEPROM.write(contra1E + i, text.charAt(i)); delay(50);
        }
        contra1 = lectura;
      }
      if (cambioC == '2') {
        for (int j = 0; j < 5; j++) {
          //EEPROM.write(contra2E + j, lectura.charAt(j)); delay(50);
          EEPROM.write(contraME+ j, text.charAt(j)); delay(50); //cambio de contra admin
        }
        //contra2 = lectura;
        contraM = text;               //       cambio de contra admin
      }
      inicioMaster = false;
      cambioC = '0';
      text = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("CAMBIO OK");
    }
  }
}


void contraMaster(char contra) { //Permiso de contraseña master
  if (contra) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("ADMIN:");
    text += contra;
    lcd.print(text);
    if (text.length() == 5) {
      if (text == master) { //contraM
        lcd.clear();
        lcd.setCursor(0, 1);
        lcd.print("CORRECTO");
        inicioMaster = true;
      }
      text = "";
    }
  }
}


void solicitudContrasena(char contra) { //ingreso de nueva contraseña
  if (contra) {
    text += contra;
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("CONTRA:");
    lcd.setCursor(7, 0);
    lcd.print(text); //lectura en lugar de text
    if (text.length() == 8) {
      //lcd.clear();
      lcd.setCursor(0, 0);
      
      if (text == contra1 ) {
        ingreso = true;
        lcd.clear();

      lcd.setCursor(0, 0);
      lcd.print("BIENVENIDO");
      lcd.setCursor(0, 1);
      lcd.print("CARLOS ARIAS");
        intentos = 0;
      } 

if (text == contra2 ) {
        ingreso = true;
        lcd.clear();

      lcd.setCursor(0, 0);
      lcd.print("BIENVENIDO");
      lcd.setCursor(0, 1);
      lcd.print("ANDRES JUAREZ");
        intentos = 0;
      } 
if (text == contra3 ) {
        ingreso = true;
        lcd.clear();

      lcd.setCursor(0, 0);
      lcd.print("BIENVENIDO");
      lcd.setCursor(0, 1);
      lcd.print("JAVIER ANDRADE ");
        intentos = 0;
      } 
if (text == contra4 ) {
        ingreso = true;
        lcd.clear();

      lcd.setCursor(0, 0);
      lcd.print("BIENVENIDO");
      lcd.setCursor(0, 1);
      lcd.print("VIVI YUCAILLA ");
        intentos = 0;
      } 

      else {
        intentos++;
        lcd.print("INCORECTO");
      }
      text = "";
      delay(1000);
      printLCD();
    }
  }
}

void reloj() { //Reloj para guardar los eventos
  if (ingreso) {
    temporizador++;
    if (temporizador > 10) {
      ingreso = false;
      temporizador = 0;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("SISTEMA");
      lcd.setCursor(0, 1);
      lcd.print("ON");
    }
  }
}
